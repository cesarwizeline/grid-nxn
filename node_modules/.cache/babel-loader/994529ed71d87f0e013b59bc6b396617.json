{"ast":null,"code":"var _jsxFileName = \"/Users/cesar.romero/Desktop/grid-nxn/src/Grid.js\";\nimport React from 'react';\nimport Box from './Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Grid(_ref) {\n  let {\n    gridSize,\n    color\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [...Array(parseInt(gridSize))].map((element, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [...Array(parseInt(gridSize))].map((element, index) => /*#__PURE__*/_jsxDEV(Box, {\n          color: color\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/cesar.romero/Desktop/grid-nxn/src/Grid.js"],"names":["React","Box","Grid","gridSize","color","Array","parseInt","map","element","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,eAAe,SAASC,IAAT,OAAmC;AAAA,MAArB;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAqB;AAChD,sBACE;AAAA,2BACE;AAAA,gBACG,CAAC,GAAGC,KAAK,CAACC,QAAQ,CAACH,QAAD,CAAT,CAAT,EAA+BI,GAA/B,CAAmC,CAACC,OAAD,EAAUC,KAAV,kBAClC;AAAA,kBACG,CAAC,GAAGJ,KAAK,CAACC,QAAQ,CAACH,QAAD,CAAT,CAAT,EAA+BI,GAA/B,CAAmC,CAACC,OAAD,EAAUC,KAAV,kBAClC,QAAC,GAAD;AAAK,UAAA,KAAK,EAAEL;AAAZ,WAAwBK,KAAxB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH,SAASA,KAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;KAduBP,I","sourcesContent":["import React from 'react';\nimport Box from './Box';\n\nexport default function Grid({ gridSize, color }) {\n  return (\n    <table>\n      <tbody>\n        {[...Array(parseInt(gridSize))].map((element, index) => (\n          <tr key={index}>\n            {[...Array(parseInt(gridSize))].map((element, index) => (\n              <Box color={color} key={index} />\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}